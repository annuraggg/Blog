@tailwind base;
@tailwind components;
@tailwind utilities;

/* Slim font */
@font-face {
  font-family: "PolySans";
  src: url("./assets/polysans/slim.eot");
  src: url("./assets/polysans/slim.eot?#iefix") format("embedded-opentype"),
    url("./assets/polysans/slim.woff") format("woff"),
    url("./assets/polysans/slim.woff2") format("woff2"),
    url("./assets/polysans/slim.ttf") format("truetype"),
    url("./assets/polysans/slim.svg#PolySans Slim") format("svg");
  font-weight: lighter;
}

/* Neutral font */
@font-face {
  font-family: "PolySans";
  src: url("./assets/polysans/neutral.eot");
  src: url("./assets/polysans/neutral.eot?#iefix") format("embedded-opentype"),
    url("./assets/polysans/neutral.woff") format("woff"),
    url("./assets/polysans/neutral.woff2") format("woff2"),
    url("./assets/polysans/neutral.ttf") format("truetype"),
    url("./assets/polysans/neutral.svg#PolySans Neutral") format("svg");
  font-weight: normal;
}

@font-face {
  font-family: "PolySans";
  src: url("./assets/polysans/median.eot");
  src: url("./assets/polysans/median.eot?#iefix") format("embedded-opentype"),
    url("./assets/polysans/median.woff") format("woff"),
    url("./assets/polysans/median.woff2") format("woff2"),
    url("./assets/polysans/median.ttf") format("truetype"),
    url("./assets/polysans/median.svg#PolySans Median") format("svg");

  font-weight: normal;
}

:root {
  --fontColor: #c2bfbd;
}

body {
  /* dark */
  background-color: #0e1010;
  color: var(--fontColor);
  font-family: "PolySans", sans-serif;
}

.ql-toolbar {
  border: none !important;
  color: white !important;
  text-align: center;
}

.ql-toolbar .ql-stroke {
  fill: none;
  stroke: var(--fontColor) !important;
  background-color: var(--fontColor) !important;
}

.ql-placeholder {
  color: var(--fontColor) !important;
}

.ql-header > button {
  fill: none;
  stroke: var(--fontColor) !important;
  background-color: var(--fontColor) !important;
  border: none !important;
  color: white !important;
}

.ql-editor.ql-blank::before {
  color: var(--fontColor) !important;
}
.ql-editor {
  font-family: "PolySans" !important;
  text-align: start;
}

.ql-toolbar .ql-fill {
  fill: var(--fontColor) !important;
  stroke: none;
  background-color: var(--fontColor) !important;
}

.ql-container {
  border: none !important;
}

.ReactTags__tag {
  padding: 1px;
  text-underline-offset: 2px;
  margin-right: 10px;
  color: #797776;
}

.ReactTags__tagInputField {
  color: var(--fontColor);
  background-color: transparent;
  border: 1px solid rgb(61, 61, 61);
  padding: 5px 10px;
  border-radius: 5px;
  margin-top: 10px;
}

.pyramid-loader {
  position: relative;
  width: 300px;
  height: 300px;
  display: block;
  transform-style: preserve-3d;
  transform: rotateX(-20deg);
}

.wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  animation: spin 4s linear infinite;
}

@keyframes spin {
  100% {
    transform: rotateY(360deg);
  }
}

.pyramid-loader .wrapper .side {
  width: 70px;
  height: 70px;
/* you can choose any gradient or color you want */
  /* background: radial-gradient( #2F2585 10%, #F028FD 70%, #2BDEAC 120%); */
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform-origin: center top;
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
}

.pyramid-loader .wrapper .side1 {
  transform: rotateZ(-30deg) rotateY(90deg);
  background: conic-gradient( #2BDEAC, #F028FD, #D8CCE6, #2F2585);
}

.pyramid-loader .wrapper .side2 {
  transform: rotateZ(30deg) rotateY(90deg);
  background: conic-gradient( #2F2585, #D8CCE6, #F028FD, #2BDEAC);
}

.pyramid-loader .wrapper .side3 {
  transform: rotateX(30deg);
  background: conic-gradient( #2F2585, #D8CCE6, #F028FD, #2BDEAC);
}

.pyramid-loader .wrapper .side4 {
  transform: rotateX(-30deg);
  background: conic-gradient( #2BDEAC, #F028FD, #D8CCE6, #2F2585);
}

.pyramid-loader .wrapper .shadow {
  width: 60px;
  height: 60px;
  background: #8B5AD5;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  transform: rotateX(90deg) translateZ(-40px);
  filter: blur(12px);
}